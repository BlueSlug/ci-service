---

- defaults:
    name: idi-nodejs
    git_repo: https://github.com/idi-ops/docker-nodejs.git
    git_branch: 4.2.6
    docker_username: inclusivedesign
    docker_image: nodejs
    docker_tag: latest
    build_timeout: 30
    email_recipient: idi-ops@lists.inclusivedesign.ca
    jenkins_node: i-0027.tor1.inclusivedesign.ca

- project:
    name: idi-nodejs-latest
    jenkins_tag: latest
    git_branch: 4.2.6
    docker_tag: latest
    jobs:
      - 'docker-idi-nodejs-all'

- project:
    name: idi-nodejs-0.10.36
    jenkins_tag: 0.10.36
    git_branch: 0.10.36
    docker_tag: 0.10.36
    jobs:
      - 'docker-idi-nodejs-all'

- project:
    name: idi-nodejs-0.10.41
    jenkins_tag: 0.10.41
    git_branch: 0.10.41
    docker_tag: 0.10.41
    jobs:
      - 'docker-idi-nodejs-all'

- project:
    name: idi-nodejs-0.10.42
    jenkins_tag: 0.10.42
    git_branch: 0.10.42
    docker_tag: 0.10.42
    jobs:
      - 'docker-idi-nodejs-all'

- project:
    name: idi-nodejs-4.2.1
    jenkins_tag: 4.2.1
    git_branch: 4.2.1
    docker_tag: 4.2.1
    jobs:
      - 'docker-idi-nodejs-all'

- project:
    name: idi-nodejs-4.2.2
    jenkins_tag: 4.2.2
    git_branch: 4.2.2
    docker_tag: 4.2.2
    jobs:
      - 'docker-idi-nodejs-all'

- project:
    name: idi-nodejs-4.2.3
    jenkins_tag: 4.2.3
    git_branch: 4.2.3
    docker_tag: 4.2.3
    jobs:
      - 'docker-idi-nodejs-all'

- project:
    name: idi-nodejs-4.2.4
    jenkins_tag: 4.2.4
    git_branch: 4.2.4
    docker_tag: 4.2.4
    jobs:
      - 'docker-idi-nodejs-all'

- project:
    name: idi-nodejs-4.2.5
    jenkins_tag: 4.2.5
    git_branch: 4.2.5
    docker_tag: 4.2.5
    jobs:
      - 'docker-idi-nodejs-all'

- project:
    name: idi-nodejs-4.2.6
    jenkins_tag: 4.2.6
    git_branch: 4.2.6
    docker_tag: 4.2.6
    jobs:
      - 'docker-idi-nodejs-all'

- project:
    name: idi-nodejs-4.3.0
    jenkins_tag: 4.3.0
    git_branch: 4.3.0
    docker_tag: 4.3.0
    jobs:
      - 'docker-idi-nodejs-all'



# WARNING: Be careful changing anything below.

# Used to ensure only one `docker push` command runs at a time
- wrapper:
    name: idi-nodejs-docker-push
    wrappers:
      - exclusion:
          resources:
            - 'idi-nodejs-docker-push'

- job-group:
    name: 'docker-idi-nodejs-all'
    jobs:
      - 'docker-idi-nodejs-{jenkins_tag}'
      - 'docker-idi-nodejs-{jenkins_tag}-build'
      - 'docker-idi-nodejs-{jenkins_tag}-test'
      - 'docker-idi-nodejs-{jenkins_tag}-release'
      - 'docker-idi-nodejs-{jenkins_tag}-cleanup'

- job-template:
    defaults: idi-nodejs
    name: 'docker-idi-nodejs-{jenkins_tag}'
    description: 'Builds, tests and pushes the Node.js {jenkins_tag} Docker image'
    project-type: multijob
    concurrent: false
    node: '{jenkins_node}'
    wrappers:
      - timeout:
          timeout: '{build_timeout}'
          abort: yes
    publishers:
      - email:
            recipients: '{email_recipient}'
    scm:
      - git:
          url: '{git_repo}'
          skip-tag: true
          branches:
            - '{git_branch}'
    triggers:
      - github
      - reverse:
          jobs: docker-idi-centos-7
          result: success
    builders:
      - multijob:
          name: Cleanup
          condition: SUCCESSFUL
          projects:
            - name: docker-idi-nodejs-{jenkins_tag}-cleanup
              predefined-parameters: parent_workspace=$WORKSPACE
      - multijob:
          name: Build
          condition: SUCCESSFUL
          projects:
            - name: docker-idi-nodejs-{jenkins_tag}-build
              predefined-parameters: parent_workspace=$WORKSPACE
      - multijob:
          name: Test
          condition: SUCCESSFUL
          projects:
            - name: docker-idi-nodejs-{jenkins_tag}-test
              predefined-parameters: parent_workspace=$WORKSPACE
      - multijob:
          name: Release
          condition: SUCCESSFUL
          projects:
            - name: docker-idi-nodejs-{jenkins_tag}-release
              predefined-parameters: parent_workspace=$WORKSPACE

- job-template:
    defaults: idi-nodejs
    name: 'docker-idi-nodejs-{jenkins_tag}-cleanup'
    description: 'Removes build artifacts'
    node: '{jenkins_node}'
    workspace: $parent_workspace
    builders:
      - shell: docker rmi -f {docker_username}/{docker_image}:{docker_tag} || echo "docker rmi failed. image probably does not exist"

- job-template:
    defaults: idi-nodejs
    name: 'docker-idi-nodejs-{jenkins_tag}-build'
    description: 'Builds Docker image'
    node: '{jenkins_node}'
    workspace: $parent_workspace
    builders:
      - shell: 'docker build --pull -t {docker_username}/{docker_image}:{docker_tag} .'

- job-template:
    defaults: idi-nodejs
    name: 'docker-idi-nodejs-{jenkins_tag}-test'
    description: 'Runs a test container'
    node: '{jenkins_node}'
    workspace: $parent_workspace
    builders:
      - shell: docker run --rm -i {docker_username}/{docker_image}:{docker_tag} node --eval "console.log('OK');"

# Tag operation is forced in case they've happened in the past from a previous build (no-op)
# Push is forced otherwise a prompt is displayed asking if really want to publish to public registry
- job-template:
    defaults: idi-nodejs
    name: 'docker-idi-nodejs-{jenkins_tag}-release'
    description: 'Publishes to Docker Hub'
    node: '{jenkins_node}'
    workspace: $parent_workspace
    wrappers:
      - idi-nodejs-docker-push
    builders:
      - critical-block-start
      - shell: docker push -f {docker_username}/{docker_image}:{docker_tag}
      - critical-block-end
